{
	"class field declare": {
		"scope": "dart",
		"prefix": "clfd",
		"body": "${1|final,const,var|} ${2|String,int,bool:String|}${3:?} ${4:mvar};"
	},
	"class declare": {
		"scope": "dart",
		"prefix": "cld2",
		"body": [
			"class ${1:Name} {",
			"\t$0",
			"}"
		],
		"description": "class declare"
	},
	"class declare base": {
		"scope": "dart",
		"prefix": "cld",
		"body": [
			"class ${1:Name}${2: extends ${3:ParentClass}} {",
			"\t\tfinal ${4:String?} ${5:mvar};",
			"\t\t${6:}",
			"}",
		],
		"description": "class declare"
	},
	"class abstract declare": {
		"scope": "dart",
		"prefix": "clda",
		"body": [
			"abstract class ${1:Name} {",
			"\t$0",
			"}"
		],
		"description": "class abstract declare"
	},
	"class declare implements": {
		"scope": "dart",
		"prefix": "cldi",
		"body": [
			"class ${1:Name} implements ${2:interface} {",
			"\t$0",
			"}"
		],
		"description": "class declare"
	},
	"class inheretence": {
		"scope": "dart",
		"prefix": "clin",
		"body": [
			"extends $ParentName"
		],
		"description": "class inheretence"
	},
	"new class inheritence": {
		"scope": "dart",
		"prefix": "clparent ",
		"body": [
			"class ${1:Name} extends ${2:ParentName}{",
			"  $0",
			"}"
		],
		"description": "new class inheritence"
	},
	"class constructor": {
		"scope": "dart",
		"prefix": "clc",
		"body": [
			"${1:ClassName}(${2:this.${3:a}});"
		],
		"description": "class constructor"
	},
	"class declare full": {
		"scope": "dart",
		"prefix": "cldf",
		"body": [
			"class ${1:ClassName}${3: extends ${2:ParentName}}{",
			"\t${4:final int a;}",
			"\t${5:ClassName({required this.a\\});}",
			"}"
		],
		"description": "class declare full"
	},
	"getter arrow": {
		"scope": "dart",
		"prefix": "clgs_getter_short",
		"body": [
			"${1:type} get ${2:name} => ${3:field};",
		],
		"description": "getter arrow"
	},
	"getter": {
		"scope": "dart",
		"prefix": "clgi_getter_full",
		"body": [
			"${1:type} get ${2:name} {",
			"\treturn ${3:};",
			"}",
		],
		"description": "getter"
	},
	"setter": {
		"scope": "dart",
		"prefix": "cls_setter",
		"body": [
			"set ${1:field}(${2:type} ${3:val}){",
			"\t\t_${1:field} = ${3:val};",
			"\t}",
		],
		"description": "setter"
	},
	"equal": {
		"scope": "typescript",
		"prefix": "eq",
		"body": [
			"${1:} === ${2:}",
		],
		"description": "equal"
	},

	"not equal": {
		"scope": "typescript",
		"prefix": "eqn",
		"body": [
			"${1:} !== ${2:}",
		],
		"description": "not equal"
	},
}