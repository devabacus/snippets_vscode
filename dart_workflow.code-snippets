{

"if false": {
  "scope": "dart",
  "prefix": "iffalse",
  "body": [
"if(${1:value} == false){",
"\t\t\t\t${2:}",
"}",
  ],
  "description": "if false"
},

"if null": {
  "scope": "dart",
  "prefix": "ifnull",
  "body": [
"if(${1:value} == null){",
"\t\t\t\t${2:}",
"}",
  ],
  "description": "if null"
},

    "if not empty": {
        "scope": "dart",
        "prefix": "ifen",
        "body": [
            "if (${1:mvar}.isNotEmpty) {",
            "  ${2}",
            "}"
        ],
        "description": "if not empty"
    },
    "if empty": {
        "scope": "dart",
        "prefix": "ife",
        "body": [
            "if (${1:mvar}.isEmpty) {",
            "  ${2}",
            "}"
        ],
        "description": "if empty"
    },
    "for with index": {
        "scope": "dart",
        "prefix": "for",
        "body": [
            "for (var ${1:i} = 0; ${1:i} < ${2:count}; ${1:i}++) {",
            "   ${3}",
            "}"
        ],
        "description": "for with index"
    },
    "for in": {
        "scope": "dart",
        "prefix": "forin",
        "body": [
            "for (var ${1:item} in ${2:item}) {",
            "  $3",
            "}"
        ],
        "description": "for in"
    },
    "try catch": {
        "scope": "dart",
        "prefix": "try",
        "body": [
            "try {",
            "\t\t${2:${TM_SELECTED_TEXT:$}}",
            "} catch (e) {",
            "\t\t\t\tprint(${1:'got error: $e'});",
            "}",
        ],
        "description": "try catch"
    },
    "Flutter Try-Catch Block": {
        "prefix": "try",
        "scope": "dart",
        "body": [
            "try {",
            "\t$1",
            "} catch (e) {",
            "\t$2",
            "} ${3:finally {",
            "\t$4",
            "\\}}"
        ],
        "description": "Flutter try-catch-finally block.\nExample usage:\ntry {\n  // Your code here\n} catch (e) {\n  print('Error: \\${e.toString()}');\n  // Handle error\n} finally {\n  // Clean up resources\n}"
    }
}