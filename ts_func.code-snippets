{
	"function init": {
		"scope": "typescript",
		"prefix": "fi",
		"body": [
			"export function ${1:fname}(${2:x: number})${3::string} {",
			"\t${4:${TM_SELECTED_TEXT:}}",
			"}",
			"",
		],
		"description": "function init"
	},
	"function init2": {
		"scope": "typescript",
		"prefix": "fi2",
		"body": [
			"export function ${5:fname}() {",
			"\t${6:}",
			"}",
		],
		"description": "function init"
	},
	"function init func expr": {
		"scope": "typescript",
		"prefix": "fi2",
		"body": [
			"${1|const ,export const |}${2:myFunction} = function (${3:a: number, b: number})${4::string} {",
			"\t\t${5:return a + b;}",
			"};",
			"",
		],
		"description": "function init func expr"
	},
	"function init3": {
		"scope": "typescript",
		"prefix": "fi3",
		"body": [
			"function ${1:fName}(${3})${2::string} {",
			"    ${4}",
			"}"
		],
		"description": "function init"
	},
	"function init export": {
		"scope": "typescript",
		"prefix": "fie",
		"body": [
			"export ${1:async }function ${2:fname}(${3:}) {",
			"\t\t    ${4:}",
			"}",
			"",
		],
		"description": "function init export"
	},
	"func short": {
		"scope": "typescript",
		"prefix": "fs",
		"body": [
			"let ${1:sum} = (${2:x}: ${3:number}): ${4:number} => ${5:x*2};"
		],
		"description": "func short"
	},
	"param positional": {
		"scope": "typescript",
		"prefix": "pp",
		"body": [
			"$x: $number"
		],
		"description": "param positional"
	},
	"param optional": {
		"scope": "typescript",
		"prefix": "po",
		"body": [
			"$x?: $number"
		],
		"description": "param optional. Must follow required param"
	},
	"param default": {
		"scope": "typescript",
		"prefix": "pd",
		"body": [
			"$param=$value"
		],
		"description": "param default"
	},
	"param list": {
		"scope": "typescript",
		"prefix": "pl",
		"body": [
			"...$args"
		],
		"description": "param list"
	},
}