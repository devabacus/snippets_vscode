{
	"map init": {
		"scope": "python",
		"prefix": "mi",
		"body": [
		  "${1:mapName} = ${TM_SELECTED_TEXT:{${2:1:\"one\", 2:\"two\"}}\\}"
		 ],
		"description": "map init"
	},

	"map length": {
		"scope": "python",
		"prefix": "ml",
		"body": [
		  "len($mapName)"
		 ],
		"description": "map length"
	},
	
	"map get item": {
		"scope": "python",
		"prefix": "mgi",
		"body": [
			"${1:mapName}[${2:key}]"
		],
		"description": "map get item"
	},

	"map get item2": {
        "scope": "python",
        "prefix": "mgi2",
        "body": [
            "${1:mapName}.get(${2:\"key\"}, ${3:None})",
        ],
        "description": "map get item2"
},



	"map add": {
		"scope": "python",
		"prefix": "ma",
		"body": [
			"${1:mapName}[${2:key}] = ${3:value}"
		],
		"description": "map add"
	},
	"map remove": {
		"scope": "python",
		"prefix": "mrm",
		"body": [
			"${1:mapName}.pop(${2:key})"
		],
		"description": "map remove"
	},
	"map clear": {
		"scope": "python",
		"prefix": "mclr",
		"body": [
			"${1:mapName}.clear()"
		],
		"description": "map clear"
	},
	"map iterate": {
		"scope": "python",
		"prefix": "mit",
		"body": [
			"for ${1|k,v,k\\,v|} in ${3:mapName}.${2|keys(),values(),items()|}:",
			"    ${4:pass}"
		],
		"description": "map iterate"
	},
	"map contains keys": {
		"scope": "python",
		"prefix": "mc",
		"body": [
		  "$key in $mapName.keys()"
		 ],
		"description": "map contains keys"
	},
	"map contains values": {
		"scope": "python",
		"prefix": "mc1",
		"body": [
		  "$key in $mapName.values()"
		 ],
		"description": "map contains values"
	},
	"map contains items (key, value)": {
		"scope": "python",
		"prefix": "mc2",
		"body": [
		  "($key,$value) in $mapName.items()"
		 ],
		"description": "map contains items (key, value)"
	},

	"map comprehension": {
        "scope": "python",
        "prefix": "mm",
        "body": [
            "${1:result_map} = {${2:field}: ${4:message_dict.get(field, None)} for ${2:field} in ${3:list_of_fields}}",
        ],
        "description": "map comprehension"
},

"map add to map": {
	"scope": "python",
	"prefix": "mam",
	"body": [
		"${1:dict1}.update(${2:dict2})"
	],
	"description": "map add to map"
},
"map sort": {
	"scope": "python",
	"prefix": "ms",
	"body": [
		"def custom_sort_key(item):",
		"\t# Сортировка сначала по длине ключа, затем по алфавиту",
		"\treturn (len(item), item)",
		"",
		"def sort_snippet(${1:dict_for_sort}:dict, ${2:search_text}:str)->dict:",
		"\tsorted_dict = dict(sorted(${1:dict_for_sort}.items(), key=custom_sort_key))",
		"\treturn sorted_dict",
		"",
		
	],
	"description": "map sort"
},
}